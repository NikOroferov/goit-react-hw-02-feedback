{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Feedback/Section.jsx","components/Feedback/FeedbackOptions.jsx","components/Feedback/Statistic.jsx","components/Feedback/Notification.jsx","components/Feedback/Feedback.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","className","css","feedbackBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","feedbackCounter","Notification","message","Feedback","state","handleLeaveFeedback","setState","prevState","this","Math","round","countTotalFeedback","Statistic","Object","keys","countPositiveFeedbackPercentage","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,YAAc,gC,kKCCzD,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxC,OACC,qCACKD,GAAS,6BAAKA,IACdC,KCJQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAAQC,UAAWC,IAAIC,YAA0BC,QAAS,kBAAMN,EAAgBE,IAAhF,SACGA,GADsCA,QCJlC,SAASK,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9D,OACC,8BACC,+BACC,qBAAIT,UAAWC,IAAIS,gBAAnB,mBAA2CL,KAC3C,qBAAIL,UAAWC,IAAIS,gBAAnB,sBAA8CJ,KAC9C,qBAAIN,UAAWC,IAAIS,gBAAnB,kBAA0CH,KAC1C,qBAAIP,UAAWC,IAAIS,gBAAnB,oBAA4CF,KAC5C,qBAAIR,UAAWC,IAAIS,gBAAnB,gCAAwDD,EAAxD,YCVU,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,I,ICMOC,E,4MACnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,oBAAsB,SAAAhB,GACpB,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAASkB,EAAUlB,GAAU,O,wDAIlC,WACE,OAAOmB,KAAKJ,MAAMT,KAAOa,KAAKJ,MAAMR,QAAUY,KAAKJ,MAAMP,M,6CAG3D,WAEE,OADiBY,KAAKC,MAAOF,KAAKJ,MAAMT,KAAOa,KAAKG,qBAAwB,O,oBAI9E,WACE,OACE,sBAAKrB,UAAWC,IAAIqB,UAApB,UACE,cAAC9B,EAAD,CAASC,MAAM,yBAAf,SACE,cAACE,EAAD,CACEC,QAAS2B,OAAOC,KAAKN,KAAKJ,OAC1BjB,gBAAiBqB,KAAKH,wBAIzBG,KAAKG,qBAAuB,EAC3B,cAAC7B,EAAD,CAASC,MAAM,aAAf,SACE,cAACW,EAAD,CACEC,KAAMa,KAAKJ,MAAMT,KACjBC,QAASY,KAAKJ,MAAMR,QACpBC,IAAKW,KAAKJ,MAAMP,IAChBC,MAAOU,KAAKG,qBACZZ,mBAAoBS,KAAKO,sCAI7B,cAACd,EAAD,CAAcC,QAAQ,6B,GA3CMc,aCLvB,SAASC,IACtB,OAAO,cAAC,EAAD,ICETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.6dbace67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistic\":\"Feedback_Statistic__3uIf0\",\"feedbackBtn\":\"Feedback_feedbackBtn__2RkSx\"};","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n\treturn (\r\n\t\t<>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </>\r\n\t)\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};","import css from 'components/Feedback/Feedback.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button className={css.feedbackBtn} key={option} onClick={() => onLeaveFeedback(option)}>\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import css from 'components/Feedback/Feedback.module.css';\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li className={css.feedbackCounter}>Good: {good}</li>\r\n\t\t\t\t\t<li className={css.feedbackCounter}>Neutral: {neutral}</li>\r\n\t\t\t\t\t<li className={css.feedbackCounter}>Bad: {bad}</li>\r\n\t\t\t\t\t<li className={css.feedbackCounter}>Total: {total}</li>\r\n\t\t\t\t\t<li className={css.feedbackCounter}>Positive feedback: {positivePercentage}%</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n","export default function Notification({ message }) {\r\n  return <h2>{message}</h2>;\r\n}\r\n","import React, { Component } from 'react';\r\nimport css from 'components/Feedback/Feedback.module.css';\r\nimport Section from './Section';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistic';\r\nimport Notification from './Notification';\r\n\r\nexport default class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleLeaveFeedback = option => {\r\n    this.setState(prevState => ({\r\n      [option]: prevState[option] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    let percentage = Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n    return percentage;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={css.Statistic}>\r\n        <Section title=\"Please, leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        {this.countTotalFeedback() > 0 ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Feedback from 'components/Feedback/Feedback';\n\nexport default function App() {\n  return <Feedback />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}